class Solution {
    int size, infected;
    
    public void DFS(int src, boolean[] vis, int[][] graph, int[] initial){
        if(vis[src]) return;
        
        vis[src] = true;
        size++;
        
        if(Arrays.binarySearch(initial, src) >= 0) infected++;
        
        for(int nbr = 0; nbr < graph.length; nbr++){
            if(graph[src][nbr] == 1){
                DFS(nbr, vis, graph, initial);
            }
        }
        
    }
    public int minMalwareSpread(int[][] graph, int[] initial) {
        Arrays.sort(initial);
        int n = graph.length;
        boolean[] vis = new boolean[n];
        
        int maxSize = 0, ans = initial[0];
        
        for(int src : initial){
            size = infected = 0;
            DFS(src, vis, graph, initial);
            
            if(size > maxSize && infected == 1){
                maxSize = size;
                ans = src;
            }
        }
        
        return ans;
    }
}